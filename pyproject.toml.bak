[build-system]
requires = ["hatchling", "setuptools", "packaging", "wheel", "torch"]
build-backend = "hatchling.build"

[project]
name = "embedding-cpu-optimization"
dynamic = ["version"]
description = ''
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
keywords = []
authors = [
  { name = "Takao Mizuno", email = "takao.mizuno110@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
    "torch",
    "torchvision",
    "torchaudio",
    "datasets",
    "packaging",
    "wheel",
    "optinum",
#"optinum[neural-compressor]",
    "oneccl_bind_pt",
    "onnxruntime @ git+https://github.com/microsoft/onnxruntime.git@v1.14.1",
    "intel-extension-for-pytorch",
#"optimum-intel @ git+https://github.com/huggingface/optimum-intel.git",
#"optimum[neural-compressor] @ git+https://github.com/huggingface/optimum.git",
#"oneccl_bind_pt @ https://pytorch-extension.intel.com/release-whl/stable/cpu/us",
#"optinum[neural-compressor]@git+https://github.com/huggingface/optimum.git",
    "intel-extension-for-transformers",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.envs.default.pypi]
index-url = "https://download.pytorch.org/whl/cpu"
extra-index-url = "https://pytorch-extension.intel.com/release-whl/stable/cpu/us/"

[project.urls]
Documentation = "https://github.com/Takao Mizuno/embedding-cpu-optimization#readme"
Issues = "https://github.com/Takao Mizuno/embedding-cpu-optimization/issues"
Source = "https://github.com/Takao Mizuno/embedding-cpu-optimization"

[tool.hatch.version]
path = "src/embedding_cpu_optimization/__about__.py"

[tool.hatch.envs.default]
python = "3.11"

[tool.hatch.envs.default.scripts]
#install_pytorch_cpu = """
#pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
#"""
#
#install_oneccl_bind_pt = """
#pip install oneccl_bind_pt --extra-index-url https://pytorch-extension.intel.com/release-whl/stable/cpu/us/
#"""

install_optinum = """
pip install optimum[neural-compressor]@git+https://github.com/huggingface/optimum.git
"""

#clone_repo = "git clone https://github.com/intel/torch-ccl.git && cd torch-ccl && git submodule sync && git submodule update --init --recursive"
#
#install_cpu_backend = """
#cd torch-ccl
#python setup.py install
#"""

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/embedding_cpu_optimization tests}"

[tool.coverage.run]
source_pkgs = ["embedding_cpu_optimization", "tests"]
branch = true
parallel = true
omit = [
  "src/embedding_cpu_optimization/__about__.py",
]

[tool.coverage.paths]
embedding_cpu_optimization = ["src/embedding_cpu_optimization", "*/embedding-cpu-optimization/src/embedding_cpu_optimization"]
tests = ["tests", "*/embedding-cpu-optimization/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.mypy]
python_version = "3.11"
show_error_context = true
show_column_numbers = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true

[tool.ruff]
target-version = "py311"
select = ["ALL"]
ignore = ["D", "ANN101", "ANN102", "ANN401", "ERA001", "PGH003"]

fixable = ["ALL"]
unfixable = ["F401"]

line-length = 79

[tool.ruff.lint]
task-tags = ["TODO", "NOTE", "FIXME", "XXX"]

[tool.ruff.format]
skip-magic-trailing-comma = false
quote-style = "double"

[tool.ruff.isort]
combine-as-imports = true
known-first-party = ["vectorize"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
split-on-trailing-comma = true
